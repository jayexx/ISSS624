[
  {
    "objectID": "Take_home_Exercises/Take_home_Ex1/Take-home_Ex1.html",
    "href": "Take_home_Exercises/Take_home_Ex1/Take-home_Ex1.html",
    "title": "Take-home_Ex1",
    "section": "",
    "text": "The success of Singapore’s public transport is commonly recognised as 1 of the quintessential indicator of its rapid growth and prosperity since her independence in 1965. It comprises of both public buses as well as mass rapid transport (MRT) trains. While the MRT network has been expanding across the many zones within Singapore, the bus network remains the most option accessible and reliable option amongst the two.\nThus, the utilisation pattern of buses are of key importance to multiple aspects of Singapore’s socio-economic spheres, ranging from areas of work productivity and efficiency, environmental impact, tourism, and even to potential impact to cost of living and real estate development; which underpins the impetus of this exercise to gain a better understanding of the utilisation patterns and characteristics of Singapore’s bus stops."
  },
  {
    "objectID": "Take_home_Exercises/Take_home_Ex1/Take-home_Ex1.html#introduction",
    "href": "Take_home_Exercises/Take_home_Ex1/Take-home_Ex1.html#introduction",
    "title": "Take-home_Ex1",
    "section": "",
    "text": "The success of Singapore’s public transport is commonly recognised as 1 of the quintessential indicator of its rapid growth and prosperity since her independence in 1965. It comprises of both public buses as well as mass rapid transport (MRT) trains. While the MRT network has been expanding across the many zones within Singapore, the bus network remains the most option accessible and reliable option amongst the two.\nThus, the utilisation pattern of buses are of key importance to multiple aspects of Singapore’s socio-economic spheres, ranging from areas of work productivity and efficiency, environmental impact, tourism, and even to potential impact to cost of living and real estate development; which underpins the impetus of this exercise to gain a better understanding of the utilisation patterns and characteristics of Singapore’s bus stops."
  },
  {
    "objectID": "Take_home_Exercises/Take_home_Ex1/Take-home_Ex1.html#objectives",
    "href": "Take_home_Exercises/Take_home_Ex1/Take-home_Ex1.html#objectives",
    "title": "Take-home_Ex1",
    "section": "Objectives",
    "text": "Objectives\nThe key objectives of this exercise are:\n\nTo perform geovisualisation and analysis of peakhour busstop passenger trips\nTo perform Analysis of Local Indicators of Spatial Association (LISA) for passenger trips"
  },
  {
    "objectID": "Take_home_Exercises/Take_home_Ex1/Take-home_Ex1.html#getting-started",
    "href": "Take_home_Exercises/Take_home_Ex1/Take-home_Ex1.html#getting-started",
    "title": "Take-home_Ex1",
    "section": "Getting Started",
    "text": "Getting Started\nThe code chunk below load the following packages:\n\ntmap: for thematic mapping\nsf for geospatial data handling\ntidyverse for non-spatial data handling.\nknitr for creating html table\nspdep\nsfdep for creating an sf and tidyverse friendly interfaceas well as for introducing new functionality that is not present in spdep\nplotly for interactive plots\n\n\npacman::p_load(tmap, sf, tidyverse, knitr, spdep, sfdep, plotly, zoo, Kendall)"
  },
  {
    "objectID": "Take_home_Exercises/Take_home_Ex1/Take-home_Ex1.html#importing-and-preparing-the-base-geospatial-and-aspatial-data",
    "href": "Take_home_Exercises/Take_home_Ex1/Take-home_Ex1.html#importing-and-preparing-the-base-geospatial-and-aspatial-data",
    "title": "Take-home_Ex1",
    "section": "Importing and preparing the Base Geospatial and Aspatial Data",
    "text": "Importing and preparing the Base Geospatial and Aspatial Data\n\nAspatial data\nFirstly, the Passenger Volume by Origin Destination Bus Stops data set for the month of October 2023, from LTA DataMall, will be imported by using ‘read_csv()’ of **readr* package.\n\n#\\| eval: false \nodbus &lt;- read.csv(\"data/aspatial/origin_destination_bus_202310.csv\")\n\nFrom below, the values in OROGIN_PT_CODE and DESTINATON_PT_CODE odbus in the tibble data frame are in numeric data type.\n\nglimpse(odbus)\n\nRows: 5,694,297\nColumns: 7\n$ YEAR_MONTH          &lt;chr&gt; \"2023-10\", \"2023-10\", \"2023-10\", \"2023-10\", \"2023-…\n$ DAY_TYPE            &lt;chr&gt; \"WEEKENDS/HOLIDAY\", \"WEEKDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       &lt;int&gt; 16, 16, 14, 14, 17, 17, 17, 7, 14, 14, 10, 20, 20,…\n$ PT_TYPE             &lt;chr&gt; \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      &lt;int&gt; 4168, 4168, 80119, 80119, 44069, 20281, 20281, 190…\n$ DESTINATION_PT_CODE &lt;int&gt; 10051, 10051, 90079, 90079, 17229, 20141, 20141, 1…\n$ TOTAL_TRIPS         &lt;int&gt; 3, 5, 3, 5, 4, 1, 24, 2, 1, 7, 3, 2, 5, 1, 1, 1, 1…\n\n\nUsing appropriate tidyverse functions to convert these data values into factor data type.\n\nodbus$ORIGIN_PT_CODE &lt;- as.factor(odbus$ORIGIN_PT_CODE)\nodbus$DESTINATION_PT_CODE &lt;- as.factor(odbus$DESTINATION_PT_CODE)\n\nFrom below, the values in OROGIN_PT_CODE and DESTINATON_PT_CODE odbus in the tibble data frame are now in factor data type.\n\nglimpse(odbus)\n\nRows: 5,694,297\nColumns: 7\n$ YEAR_MONTH          &lt;chr&gt; \"2023-10\", \"2023-10\", \"2023-10\", \"2023-10\", \"2023-…\n$ DAY_TYPE            &lt;chr&gt; \"WEEKENDS/HOLIDAY\", \"WEEKDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       &lt;int&gt; 16, 16, 14, 14, 17, 17, 17, 7, 14, 14, 10, 20, 20,…\n$ PT_TYPE             &lt;chr&gt; \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      &lt;fct&gt; 4168, 4168, 80119, 80119, 44069, 20281, 20281, 190…\n$ DESTINATION_PT_CODE &lt;fct&gt; 10051, 10051, 90079, 90079, 17229, 20141, 20141, 1…\n$ TOTAL_TRIPS         &lt;int&gt; 3, 5, 3, 5, 4, 1, 24, 2, 1, 7, 3, 2, 5, 1, 1, 1, 1…\n\n\n\n\nGeospatial data\nImport BusStop layer downloaded from LTA DataMall into RStudio and save it as a sf data frame called busstop.\n\nbusstop &lt;- st_read(dsn = \"data/geospatial\",\n                   layer = \"BusStop\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `BusStop' from data source \n  `C:\\jayexx\\ISSS624\\Take_home_Exercises\\Take_home_Ex1\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\nThe structure of busstop sf tibble data frame is as follows.\n\nglimpse(busstop)\n\nRows: 5,161\nColumns: 4\n$ BUS_STOP_N &lt;chr&gt; \"22069\", \"32071\", \"44331\", \"96081\", \"11561\", \"66191\", \"2338…\n$ BUS_ROOF_N &lt;chr&gt; \"B06\", \"B23\", \"B01\", \"B05\", \"B05\", \"B03\", \"B02A\", \"B02\", \"B…\n$ LOC_DESC   &lt;chr&gt; \"OPP CEVA LOGISTICS\", \"AFT TRACK 13\", \"BLK 239\", \"GRACE IND…\n$ geometry   &lt;POINT [m]&gt; POINT (13576.31 32883.65), POINT (13228.59 44206.38),…"
  },
  {
    "objectID": "Take_home_Exercises/Take_home_Ex1/Take-home_Ex1.html#objective-1-geovisualisation-and-analysis-of-bus-stop-passengers-during-peakhours",
    "href": "Take_home_Exercises/Take_home_Ex1/Take-home_Ex1.html#objective-1-geovisualisation-and-analysis-of-bus-stop-passengers-during-peakhours",
    "title": "Take-home_Ex1",
    "section": "Objective (1): Geovisualisation and Analysis of Bus Stop Passengers during Peakhours",
    "text": "Objective (1): Geovisualisation and Analysis of Bus Stop Passengers during Peakhours\n\nExtracting the passenger trips for peakhour time intervals\nFor the purpose of this exercise, extract commuting flows during:\n\nweekday morning peak and label the output tibble data table as odbus_wkd6_9.\n\n\nodbus_wkd6_9 &lt;- odbus %&gt;%\n  filter(DAY_TYPE == \"WEEKDAY\") %&gt;%\n  filter(TIME_PER_HOUR &gt;= 6 &\n           TIME_PER_HOUR &lt;= 9) %&gt;%\n  group_by(ORIGIN_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS))\n\n\nweekday evening peak and label the output tibble data table as odbus_wkd17_20.\n\n\nodbus_wkd17_20 &lt;- odbus %&gt;%\n  filter(DAY_TYPE == \"WEEKDAY\") %&gt;%\n  filter(TIME_PER_HOUR &gt;= 17 &\n           TIME_PER_HOUR &lt;= 20) %&gt;%\n  group_by(ORIGIN_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS))\n\n\nweekend/holiday morning peak and label the output tibble data table as odbus_wke11_14.\n\n\nodbus_wke11_14 &lt;- odbus %&gt;%\n  filter(DAY_TYPE == \"WEEKENDS/HOLIDAY\") %&gt;%\n  filter(TIME_PER_HOUR &gt;= 11 &\n           TIME_PER_HOUR &lt;= 14) %&gt;%\n  group_by(ORIGIN_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS))\n\n\nweekend/holiday evening peak and label the output tibble data table as odbus_wke16_19.\n\n\nodbus_wke16_19 &lt;- odbus %&gt;%\n  filter(DAY_TYPE == \"WEEKENDS/HOLIDAY\") %&gt;%\n  filter(TIME_PER_HOUR &gt;= 16 &\n           TIME_PER_HOUR &lt;= 19) %&gt;%\n  group_by(ORIGIN_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS))\n\nConvert and save the tible data sets in rds format as follows.\n\nwrite_rds(odbus_wkd6_9, \"data/rds/odbus_wkd6_9.rds\")\nwrite_rds(odbus_wkd17_20, \"data/rds/odbus_wkd17_20.rds\")\nwrite_rds(odbus_wke11_14, \"data/rds/odbus_wke11_14.rds\")\nwrite_rds(odbus_wke16_19, \"data/rds/odbus_wke16_19.rds\")\n\nImport files back into R as follows.\n\nodbus_wkd6_9 &lt;- read_rds(\"data/rds/odbus_wkd6_9.rds\")\nodbus_wkd17_20 &lt;- read_rds(\"data/rds/odbus_wkd17_20.rds\")\nodbus_wke11_14 &lt;- read_rds(\"data/rds/odbus_wke11_14.rds\")\nodbus_wke16_19 &lt;- read_rds(\"data/rds/odbus_wke16_19.rds\")\n\n\n\nPreparing Geospatial data in Hexagonal grid\nCreating hexagonal grid in sf format with grid_id as follows.\n\nhxgn_grid = st_make_grid(busstop, c(250, 250), what = \"polygons\", square = FALSE)\n\n# To sf and add grid ID\nhxgn_grid_sf = st_sf(hxgn_grid) %&gt;%\n  mutate(grid_id = 1:length(lengths(hxgn_grid)))\n\nMerging imported busstop data with Hexagonal grid as follows.\n\nbusstop_hxgn_grid &lt;- st_intersection(busstop, hxgn_grid_sf) %&gt;%\n  select(BUS_STOP_N, grid_id) %&gt;%\n  st_drop_geometry()\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\n\nChecking for BUS_STOP_N with duplicate grid_id, and grid_id with duplicate BUS_STOP_N.\n\ncheck_duplicate &lt;- busstop_hxgn_grid %&gt;%\n  group_by(grid_id) %&gt;%\n  summarise(num_BUS_STOP_N = n_distinct(BUS_STOP_N))\n\ncheck_duplicate1 &lt;- busstop_hxgn_grid %&gt;%\n  group_by(BUS_STOP_N) %&gt;%\n  summarise(num_grid_id = n_distinct(grid_id))\n\nFrom the above, - out of 3,131 grid_id, 1,476 (47%) grid_id contain 2 busstops, 1,410 (45%) grid_id contain only 1 busstop, and the remaining 8% containing more than 2 busstops. Only 1 grid_id has the maximum of 5 busstops. - out of 5,145 busstops, only 8 intercept across 2 grid_id.\nHence, for this exercise, to avoid double counting of trips subsequently, the duplicate grid_id for the 8 busstops are removed.\n\nbusstop_hxgn_grid &lt;- distinct(busstop_hxgn_grid, BUS_STOP_N, .keep_all = TRUE)\n\n\n\nMerging Peakhour Passenger Trips with Geospatial data\n\nWeekday morning peak\nAppend the merged busstop_hxgn_grid frame onto odbus_wkd6_9 data frame as follows.\n\nwkd6_9_hxgn_grid &lt;- left_join(busstop_hxgn_grid, odbus_wkd6_9,\n            by = c(\"BUS_STOP_N\" = \"ORIGIN_PT_CODE\")) %&gt;%\n  rename(ORIGIN_BS = BUS_STOP_N,\n         ORIGIN_GRID = grid_id) %&gt;%\n  group_by(ORIGIN_GRID) %&gt;%\n  reframe(\n    MAX_TRIPS_BS = ORIGIN_BS[which.max(sum(TRIPS))],\n    TOT_TRIPS = sum(TRIPS),\n    AVG_TRIPS = mean(TRIPS)\n  ) \n\nAs a good practice, check for duplicate records and retain duplicate records as follows.\n\nduplicate &lt;- wkd6_9_hxgn_grid %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nwkd6_9_hxgn_grid &lt;- unique(wkd6_9_hxgn_grid)\n\nMerge resultant data with hexgon grid and filter as follows\n\nwkd6_9_hxgn_grid_sf &lt;- left_join(hxgn_grid_sf, \n                           wkd6_9_hxgn_grid,\n                           by = c(\"grid_id\" = \"ORIGIN_GRID\"))%&gt;%\n  select(MAX_TRIPS_BS, TOT_TRIPS, AVG_TRIPS, hxgn_grid)\n\nwkd6_9_hxgn_grid_sf = filter(wkd6_9_hxgn_grid_sf, TOT_TRIPS &gt; 0)\n\n\n\nWeekday evening peak\nAppend the merged busstop_hxgn_grid frame onto odbus_wkd17_20 data frame as follows.\n\nwkd17_20_hxgn_grid &lt;- left_join(busstop_hxgn_grid, odbus_wkd17_20,\n            by = c(\"BUS_STOP_N\" = \"ORIGIN_PT_CODE\")) %&gt;%\n  rename(ORIGIN_BS = BUS_STOP_N,\n         ORIGIN_GRID = grid_id) %&gt;%\n  group_by(ORIGIN_GRID) %&gt;%\n  reframe(\n    MAX_TRIPS_BS = ORIGIN_BS[which.max(sum(TRIPS))],\n    TOT_TRIPS = sum(TRIPS),\n    AVG_TRIPS = mean(TRIPS)\n  )\n\nAs a good practice, check for duplicate records and retain duplicate records as follows.\n\nduplicate1 &lt;- wkd17_20_hxgn_grid %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nwkd17_20_hxgn_grid &lt;- unique(wkd17_20_hxgn_grid)\n\nMerge resultant data with hexgon grid and filter as follows\n\nwkd17_20_hxgn_grid_sf &lt;- left_join(hxgn_grid_sf, \n                           wkd17_20_hxgn_grid,\n                           by = c(\"grid_id\" = \"ORIGIN_GRID\"))%&gt;%\n  select(MAX_TRIPS_BS, TOT_TRIPS, AVG_TRIPS, hxgn_grid)\n\nwkd17_20_hxgn_grid_sf = filter(wkd17_20_hxgn_grid_sf, TOT_TRIPS &gt; 0)\n\n\n\nWeekend/holiday morning peak\nAppend the merged busstop_hxgn_grid frame onto odbus_wke11_14 data frame as follows.\n\nwke11_14_hxgn_grid &lt;- left_join(busstop_hxgn_grid, odbus_wke11_14,\n            by = c(\"BUS_STOP_N\" = \"ORIGIN_PT_CODE\")) %&gt;%\n  rename(ORIGIN_BS = BUS_STOP_N,\n         ORIGIN_GRID = grid_id) %&gt;%\n  group_by(ORIGIN_GRID) %&gt;%\n  reframe(\n    MAX_TRIPS_BS = ORIGIN_BS[which.max(sum(TRIPS))],\n    TOT_TRIPS = sum(TRIPS),\n    AVG_TRIPS = mean(TRIPS)\n  )\n\nAs a good practice, check for duplicate records and retain duplicate records as follows.\n\nduplicate2 &lt;- wke11_14_hxgn_grid %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nwke11_14_hxgn_grid &lt;- unique(wke11_14_hxgn_grid)\n\nMerge resultant data with hexgon grid and filter as follows\n\nwke11_14_hxgn_grid_sf &lt;- left_join(hxgn_grid_sf, \n                           wke11_14_hxgn_grid,\n                           by = c(\"grid_id\" = \"ORIGIN_GRID\"))%&gt;%\n  select(MAX_TRIPS_BS, TOT_TRIPS, AVG_TRIPS, hxgn_grid)\n\nwke11_14_hxgn_grid_sf = filter(wke11_14_hxgn_grid_sf, TOT_TRIPS &gt; 0)\n\n\n\nWeekend/holiday evening peak\nAppend the merged busstop_hxgn_grid frame onto odbus_wke16_19 data frame as follows.\n\nwke16_19_hxgn_grid &lt;- left_join(busstop_hxgn_grid, odbus_wke16_19,\n            by = c(\"BUS_STOP_N\" = \"ORIGIN_PT_CODE\")) %&gt;%\n  rename(ORIGIN_BS = BUS_STOP_N,\n         ORIGIN_GRID = grid_id) %&gt;%\n  group_by(ORIGIN_GRID) %&gt;%\n  reframe(\n    MAX_TRIPS_BS = ORIGIN_BS[which.max(sum(TRIPS))],\n    TOT_TRIPS = sum(TRIPS),\n    AVG_TRIPS = mean(TRIPS)\n  )\n\nAs a good practice, check for duplicate records and retain duplicate records as follows.\n\nduplicate3 &lt;- wke16_19_hxgn_grid %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nwke16_19_hxgn_grid &lt;- unique(wke16_19_hxgn_grid)\n\nMerge resultant data with hexgon grid and filter as follows\n\nwke16_19_hxgn_grid_sf &lt;- left_join(hxgn_grid_sf, \n                           wke16_19_hxgn_grid,\n                           by = c(\"grid_id\" = \"ORIGIN_GRID\"))%&gt;%\n  select(MAX_TRIPS_BS, TOT_TRIPS, AVG_TRIPS, hxgn_grid)\n\nwke16_19_hxgn_grid_sf = filter(wke16_19_hxgn_grid_sf, TOT_TRIPS &gt; 0)\n\n\n\n\nGeovisualisation of Busstop Peakhour periods\nPlot the map with hexagonal grid as follows for:\n\nWeekday morning peak\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(wkd6_9_hxgn_grid_sf) +\n  tm_fill(\n    col = c(\"TOT_TRIPS\", \"AVG_TRIPS\"),\n    palette = \"Reds\",\n    style = \"quantile\",\n    title = c(\"Total Passenger Trips during Weekday Morning Peak\", \"Average Passenger Trips during Weekday Morning Peak\"),\n    id = \"grid_id\",\n    showNA = FALSE,\n    alpha = 0.6,\n    popup.vars = c(\n      \"Total Trips: \" = \"TOT_TRIPS\",\n      \"Average Trips: \" = \"AVG_TRIPS\",\n      \"Most Popular Bus Stop: \" = \"MAX_TRIPS_BS\"\n      \n    ),\n    popup.format = list(\n      TOT_TRIPS = list(format = \"f\", digits = 0),\n      AVG_TRIPS = list(format = \"f\", digits = 0),\n      MAX_TRIPS_BS = list(format = \"f\", digits = 0)\n    )\n  ) +\n  tm_layout(main.title = \"Bus Stop Passenger Trips during Weekday Morning Peak\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\nWeekday evening peak\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(wkd17_20_hxgn_grid_sf) +\n  tm_fill(\n    col = c(\"TOT_TRIPS\", \"AVG_TRIPS\"),\n    palette = \"Reds\",\n    style = \"quantile\",\n    title = c(\"Total Passenger Trips during Weekday Evening Peak\", \"Average Passenger Trips during Weekday Evening Peak\"),\n    id = \"grid_id\",\n    showNA = FALSE,\n    alpha = 0.6,\n    popup.vars = c(\n      \"Total Trips: \" = \"TOT_TRIPS\",\n      \"Average Trips: \" = \"AVG_TRIPS\",\n      \"Most Popular Bus Stop: \" = \"MAX_TRIPS_BS\"\n      \n    ),\n    popup.format = list(\n      TOT_TRIPS = list(format = \"f\", digits = 0),\n      AVG_TRIPS = list(format = \"f\", digits = 0),\n      MAX_TRIPS_BS = list(format = \"f\", digits = 0)\n    )\n  ) +\n  tm_layout(main.title = \"Bus Stop Passenger Trips during Weekday Evening Peak\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\nWeekend/holiday morning peak\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(wke11_14_hxgn_grid_sf) +\n  tm_fill(\n    col = c(\"TOT_TRIPS\", \"AVG_TRIPS\"),\n    palette = \"Reds\",\n    style = \"quantile\",\n    title = c(\"Total Passenger Trips during Weekend Morning Peak\", \"Average Passenger Trips during Weekend Morning Peak\"),\n    id = \"grid_id\",\n    showNA = FALSE,\n    alpha = 0.6,\n    popup.vars = c(\n      \"Total Trips: \" = \"TOT_TRIPS\",\n      \"Average Trips: \" = \"AVG_TRIPS\",\n      \"Most Popular Bus Stop: \" = \"MAX_TRIPS_BS\"\n      \n    ),\n    popup.format = list(\n      TOT_TRIPS = list(format = \"f\", digits = 0),\n      AVG_TRIPS = list(format = \"f\", digits = 0),\n      MAX_TRIPS_BS = list(format = \"f\", digits = 0)\n    )\n  ) +\n  tm_layout(main.title = \"Bus Stop Passenger Trips during Weekend Morning Peak\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\nWeekend/holiday evening peak\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(wke16_19_hxgn_grid_sf) +\n  tm_fill(\n    col = c(\"TOT_TRIPS\", \"AVG_TRIPS\"),\n    palette = \"Reds\",\n    style = \"quantile\",\n    title = c(\"Total Passenger Trips during Weekend Evening Peak\", \"Average Passenger Trips during Weekend Evening Peak\"),\n    id = \"grid_id\",\n    showNA = FALSE,\n    alpha = 0.6,\n    popup.vars = c(\n      \"Total Trips: \" = \"TOT_TRIPS\",\n      \"Average Trips: \" = \"AVG_TRIPS\",\n      \"Most Popular Bus Stop: \" = \"MAX_TRIPS_BS\"\n      \n    ),\n    popup.format = list(\n      TOT_TRIPS = list(format = \"f\", digits = 0),\n      AVG_TRIPS = list(format = \"f\", digits = 0),\n      MAX_TRIPS_BS = list(format = \"f\", digits = 0)\n    )\n  ) +\n  tm_layout(main.title = \"Bus Stop Passenger Trips during Weekend Evening Peak\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\nSpatial patterns revealed by the geovisualisation\nFrom the Geovisualisation of the 4 peak periods, it is noted that the number of trips during the evening is higher than morning for each day type. Further based on 9 weekend/holidays and 22 weekdays in October 2023, there is higher trips per day for weekdays as compared to weekdays.\nAmongst the bus stops, the highest number of trip origins across the 4 peak periods are from the bus interchanges; while by region, the northwestern and southwestern region of Singapore seems to have the least number of trip origins across the 4 peak periods.\nMaking a comparison between distribution by Total trips and Average trips reveals whether there isn’t a very noticeable difference, and hence the areas with higher passenger trip origins were largely attributed to popular bus stops within the hexagon, rather than the number of bus stops."
  },
  {
    "objectID": "Take_home_Exercises/Take_home_Ex1/Take-home_Ex1.html#objective-2-analysis-of-local-indicators-of-spatial-association-lisa",
    "href": "Take_home_Exercises/Take_home_Ex1/Take-home_Ex1.html#objective-2-analysis-of-local-indicators-of-spatial-association-lisa",
    "title": "Take-home_Ex1",
    "section": "Objective (2): Analysis of Local Indicators of Spatial Association (LISA)",
    "text": "Objective (2): Analysis of Local Indicators of Spatial Association (LISA)\n\nMerging Passenger Trips with Geospatial data\nAppend the merged busstop_hxgn_grid frame onto the complete odbus data frame as follows.\n\nodbus_hxgn_grid &lt;- left_join(busstop_hxgn_grid, odbus,\n            by = c(\"BUS_STOP_N\" = \"ORIGIN_PT_CODE\")) %&gt;%\n  rename(ORIGIN_BS = BUS_STOP_N,\n         ORIGIN_GRID = grid_id) %&gt;%\n  group_by(ORIGIN_GRID) %&gt;%\n  reframe(\n    MAX_TRIPS_BS = ORIGIN_BS[which.max(sum(TOTAL_TRIPS))],\n    TOT_TRIPS = sum(TOTAL_TRIPS),\n    AVG_TRIPS = mean(TOTAL_TRIPS)\n  ) \n\nAs a good practice, check for duplicate records and retain duplicate records as follows.\n\nduplicate4 &lt;- odbus_hxgn_grid %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nodbus_hxgn_grid &lt;- unique(odbus_hxgn_grid)\n\nMerge resultant data with hexgon grid and filter as follows\n\nodbus_hxgn_grid_sf &lt;- left_join(hxgn_grid_sf, \n                           odbus_hxgn_grid,\n                           by = c(\"grid_id\" = \"ORIGIN_GRID\"))%&gt;%\n  select(MAX_TRIPS_BS, TOT_TRIPS, AVG_TRIPS, hxgn_grid)\n\nodbus_hxgn_grid_sf = filter(odbus_hxgn_grid_sf, TOT_TRIPS &gt; 0)\n\n\n\nDeriving adaptive distance based-weights\nderive an adaptive spatial weights by using the code chunk below.\n\nwm_ad &lt;- odbus_hxgn_grid_sf %&gt;% \n  mutate(nb = st_knn(hxgn_grid,\n                     k=8),\n         wt = st_weights(nb),\n               .before = 1)\n\n! Polygon provided. Using point on surface.\n\n\n\n\nComputing local Moran’s I\nCompute Local Moran’s I of GDPPC at county level by using local_moran() of sfdep package as follows.\n\nlisa &lt;- wm_ad %&gt;% \n  mutate(local_moran = local_moran(\n    TOT_TRIPS, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)\n\n\n\nVisualising local Moran’s I and p-value\nFor effective comparison, the Moran I and p-value maps will be plotted next to each other as shown below.\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\nmap1 &lt;- tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"local Moran's I of Passenger Trips\",\n            main.title.size = 0.8)\n\nmap2 &lt;- tm_shape(lisa) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\nFrom the above, it is noted that majority of the points had p-values that were more than 0.05, which meant that there were insufficient statistical evidence that the passenger trip origins were clusters or outliers relative it its closest 6 neighbours. However, there seems to be a noticeable cluster in the northwestern and southwestern region of Singapore, where the p-values are less than 0.05\nThe majority of points also had ii values that were close to 0, which meant that they low spatial correlation in passenger trip origins.\n\n\nVisualising LISA map\nThe LISA map is plotted with 2 types of outliers (High-Low and Low-High), and two type of clusters (namely: (High-High and Low-Low), which combines local Moran’s I of geographical areas and their respective p-values. For this plot, the classification in mean is used as shown below.\n\nlisa_sig &lt;- lisa  %&gt;%\n  filter(p_ii_sim &lt; 0.05)\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\n\n\n\n\nAligned with the earlier analysis, noticeable/sizeable low-low clusters can be observed in the north western and southwestern region of Singapore. Notwithstanding, there are also other low-low and high-high clusters sparsely distributed across the other regions, as well as rarer occurences of high-low and low-high outliers across Singapore."
  },
  {
    "objectID": "Hands-on_Exercises/Hands-on_Ex3/data/geospatial/MPSZ-2019.html",
    "href": "Hands-on_Exercises/Hands-on_Ex3/data/geospatial/MPSZ-2019.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "In-class_Exercises/In-class_Ex1/data/geospatial/MPSZ-2019.html",
    "href": "In-class_Exercises/In-class_Ex1/data/geospatial/MPSZ-2019.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "In-class_Exercises/In-class_Ex1/MPSZ-2019.html",
    "href": "In-class_Exercises/In-class_Ex1/MPSZ-2019.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "In-class_Exercises/In-class_Ex3/data/geospatial/MPSZ-2019.html",
    "href": "In-class_Exercises/In-class_Ex3/data/geospatial/MPSZ-2019.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Take-home_Exercises/Take-home_Ex1/Take-home_Ex1.html",
    "href": "Take-home_Exercises/Take-home_Ex1/Take-home_Ex1.html",
    "title": "Take-home_Ex1",
    "section": "",
    "text": "The success of Singapore’s public transport is commonly recognised as 1 of the quintessential indicator of its rapid growth and prosperity since her independence in 1965. It comprises of both public buses as well as mass rapid transport (MRT) trains. While the MRT network has been expanding across the many zones within Singapore, the bus network remains the most option accessible and reliable option amongst the two.\nThus, the utilisation pattern of buses are of key importance to multiple aspects of Singapore’s socio-economic spheres, ranging from areas of work productivity and efficiency, environmental impact, tourism, and even to potential impact to cost of living and real estate development; which underpins the impetus of this exercise to gain a better understanding of the utilisation patterns and characteristics of Singapore’s bus stops."
  },
  {
    "objectID": "Take-home_Exercises/Take-home_Ex1/Take-home_Ex1.html#introduction",
    "href": "Take-home_Exercises/Take-home_Ex1/Take-home_Ex1.html#introduction",
    "title": "Take-home_Ex1",
    "section": "",
    "text": "The success of Singapore’s public transport is commonly recognised as 1 of the quintessential indicator of its rapid growth and prosperity since her independence in 1965. It comprises of both public buses as well as mass rapid transport (MRT) trains. While the MRT network has been expanding across the many zones within Singapore, the bus network remains the most option accessible and reliable option amongst the two.\nThus, the utilisation pattern of buses are of key importance to multiple aspects of Singapore’s socio-economic spheres, ranging from areas of work productivity and efficiency, environmental impact, tourism, and even to potential impact to cost of living and real estate development; which underpins the impetus of this exercise to gain a better understanding of the utilisation patterns and characteristics of Singapore’s bus stops."
  },
  {
    "objectID": "Take-home_Exercises/Take-home_Ex1/Take-home_Ex1.html#objectives",
    "href": "Take-home_Exercises/Take-home_Ex1/Take-home_Ex1.html#objectives",
    "title": "Take-home_Ex1",
    "section": "Objectives",
    "text": "Objectives\nThe key objectives of this exercise are:\n\nTo perform geovisualisation and analysis of peakhour busstop passenger trips\nTo perform Analysis of Local Indicators of Spatial Association (LISA) for passenger trips"
  },
  {
    "objectID": "Take-home_Exercises/Take-home_Ex1/Take-home_Ex1.html#getting-started",
    "href": "Take-home_Exercises/Take-home_Ex1/Take-home_Ex1.html#getting-started",
    "title": "Take-home_Ex1",
    "section": "Getting Started",
    "text": "Getting Started\nThe code chunk below load the following packages:\n\ntmap: for thematic mapping\nsf for geospatial data handling\ntidyverse for non-spatial data handling.\nknitr for creating html table\nspdep\nsfdep for creating an sf and tidyverse friendly interfaceas well as for introducing new functionality that is not present in spdep\nplotly for interactive plots\n\n\npacman::p_load(tmap, sf, tidyverse, knitr, spdep, sfdep, plotly, zoo, Kendall)"
  },
  {
    "objectID": "Take-home_Exercises/Take-home_Ex1/Take-home_Ex1.html#importing-and-preparing-the-base-geospatial-and-aspatial-data",
    "href": "Take-home_Exercises/Take-home_Ex1/Take-home_Ex1.html#importing-and-preparing-the-base-geospatial-and-aspatial-data",
    "title": "Take-home_Ex1",
    "section": "Importing and preparing the Base Geospatial and Aspatial Data",
    "text": "Importing and preparing the Base Geospatial and Aspatial Data\n\nAspatial data\nFirstly, the Passenger Volume by Origin Destination Bus Stops data set for the month of October 2023, from LTA DataMall, will be imported by using ‘read_csv()’ of **readr* package.\n\n#\\| eval: false \nodbus &lt;- read.csv(\"data/aspatial/origin_destination_bus_202310.csv\")\n\nFrom below, the values in OROGIN_PT_CODE and DESTINATON_PT_CODE odbus in the tibble data frame are in numeric data type.\n\nglimpse(odbus)\n\nRows: 5,694,297\nColumns: 7\n$ YEAR_MONTH          &lt;chr&gt; \"2023-10\", \"2023-10\", \"2023-10\", \"2023-10\", \"2023-…\n$ DAY_TYPE            &lt;chr&gt; \"WEEKENDS/HOLIDAY\", \"WEEKDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       &lt;int&gt; 16, 16, 14, 14, 17, 17, 17, 7, 14, 14, 10, 20, 20,…\n$ PT_TYPE             &lt;chr&gt; \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      &lt;int&gt; 4168, 4168, 80119, 80119, 44069, 20281, 20281, 190…\n$ DESTINATION_PT_CODE &lt;int&gt; 10051, 10051, 90079, 90079, 17229, 20141, 20141, 1…\n$ TOTAL_TRIPS         &lt;int&gt; 3, 5, 3, 5, 4, 1, 24, 2, 1, 7, 3, 2, 5, 1, 1, 1, 1…\n\n\nUsing appropriate tidyverse functions to convert these data values into factor data type.\n\nodbus$ORIGIN_PT_CODE &lt;- as.factor(odbus$ORIGIN_PT_CODE)\nodbus$DESTINATION_PT_CODE &lt;- as.factor(odbus$DESTINATION_PT_CODE)\n\nFrom below, the values in OROGIN_PT_CODE and DESTINATON_PT_CODE odbus in the tibble data frame are now in factor data type.\n\nglimpse(odbus)\n\nRows: 5,694,297\nColumns: 7\n$ YEAR_MONTH          &lt;chr&gt; \"2023-10\", \"2023-10\", \"2023-10\", \"2023-10\", \"2023-…\n$ DAY_TYPE            &lt;chr&gt; \"WEEKENDS/HOLIDAY\", \"WEEKDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       &lt;int&gt; 16, 16, 14, 14, 17, 17, 17, 7, 14, 14, 10, 20, 20,…\n$ PT_TYPE             &lt;chr&gt; \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      &lt;fct&gt; 4168, 4168, 80119, 80119, 44069, 20281, 20281, 190…\n$ DESTINATION_PT_CODE &lt;fct&gt; 10051, 10051, 90079, 90079, 17229, 20141, 20141, 1…\n$ TOTAL_TRIPS         &lt;int&gt; 3, 5, 3, 5, 4, 1, 24, 2, 1, 7, 3, 2, 5, 1, 1, 1, 1…\n\n\n\n\nGeospatial data\nImport BusStop layer downloaded from LTA DataMall into RStudio and save it as a sf data frame called busstop.\n\nbusstop &lt;- st_read(dsn = \"data/geospatial\",\n                   layer = \"BusStop\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `BusStop' from data source \n  `C:\\jayexx\\ISSS624\\Take-home_Exercises\\Take-home_Ex1\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\nThe structure of busstop sf tibble data frame is as follows.\n\nglimpse(busstop)\n\nRows: 5,161\nColumns: 4\n$ BUS_STOP_N &lt;chr&gt; \"22069\", \"32071\", \"44331\", \"96081\", \"11561\", \"66191\", \"2338…\n$ BUS_ROOF_N &lt;chr&gt; \"B06\", \"B23\", \"B01\", \"B05\", \"B05\", \"B03\", \"B02A\", \"B02\", \"B…\n$ LOC_DESC   &lt;chr&gt; \"OPP CEVA LOGISTICS\", \"AFT TRACK 13\", \"BLK 239\", \"GRACE IND…\n$ geometry   &lt;POINT [m]&gt; POINT (13576.31 32883.65), POINT (13228.59 44206.38),…"
  },
  {
    "objectID": "Take-home_Exercises/Take-home_Ex1/Take-home_Ex1.html#objective-1-geovisualisation-and-analysis-of-bus-stop-passengers-during-peakhours",
    "href": "Take-home_Exercises/Take-home_Ex1/Take-home_Ex1.html#objective-1-geovisualisation-and-analysis-of-bus-stop-passengers-during-peakhours",
    "title": "Take-home_Ex1",
    "section": "Objective (1): Geovisualisation and Analysis of Bus Stop Passengers during Peakhours",
    "text": "Objective (1): Geovisualisation and Analysis of Bus Stop Passengers during Peakhours\n\nExtracting the passenger trips for peakhour time intervals\nFor the purpose of this exercise, extract commuting flows during:\n\nweekday morning peak and label the output tibble data table as odbus_wkd6_9.\n\n\nodbus_wkd6_9 &lt;- odbus %&gt;%\n  filter(DAY_TYPE == \"WEEKDAY\") %&gt;%\n  filter(TIME_PER_HOUR &gt;= 6 &\n           TIME_PER_HOUR &lt;= 9) %&gt;%\n  group_by(ORIGIN_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS))\n\n\nweekday evening peak and label the output tibble data table as odbus_wkd17_20.\n\n\nodbus_wkd17_20 &lt;- odbus %&gt;%\n  filter(DAY_TYPE == \"WEEKDAY\") %&gt;%\n  filter(TIME_PER_HOUR &gt;= 17 &\n           TIME_PER_HOUR &lt;= 20) %&gt;%\n  group_by(ORIGIN_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS))\n\n\nweekend/holiday morning peak and label the output tibble data table as odbus_wke11_14.\n\n\nodbus_wke11_14 &lt;- odbus %&gt;%\n  filter(DAY_TYPE == \"WEEKENDS/HOLIDAY\") %&gt;%\n  filter(TIME_PER_HOUR &gt;= 11 &\n           TIME_PER_HOUR &lt;= 14) %&gt;%\n  group_by(ORIGIN_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS))\n\n\nweekend/holiday evening peak and label the output tibble data table as odbus_wke16_19.\n\n\nodbus_wke16_19 &lt;- odbus %&gt;%\n  filter(DAY_TYPE == \"WEEKENDS/HOLIDAY\") %&gt;%\n  filter(TIME_PER_HOUR &gt;= 16 &\n           TIME_PER_HOUR &lt;= 19) %&gt;%\n  group_by(ORIGIN_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS))\n\nConvert and save the tible data sets in rds format as follows.\n\nwrite_rds(odbus_wkd6_9, \"data/rds/odbus_wkd6_9.rds\")\nwrite_rds(odbus_wkd17_20, \"data/rds/odbus_wkd17_20.rds\")\nwrite_rds(odbus_wke11_14, \"data/rds/odbus_wke11_14.rds\")\nwrite_rds(odbus_wke16_19, \"data/rds/odbus_wke16_19.rds\")\n\nImport files back into R as follows.\n\nodbus_wkd6_9 &lt;- read_rds(\"data/rds/odbus_wkd6_9.rds\")\nodbus_wkd17_20 &lt;- read_rds(\"data/rds/odbus_wkd17_20.rds\")\nodbus_wke11_14 &lt;- read_rds(\"data/rds/odbus_wke11_14.rds\")\nodbus_wke16_19 &lt;- read_rds(\"data/rds/odbus_wke16_19.rds\")\n\n\n\nPreparing Geospatial data in Hexagonal grid\nCreating hexagonal grid in sf format with grid_id as follows.\n\nhxgn_grid = st_make_grid(busstop, c(250, 250), what = \"polygons\", square = FALSE)\n\n# To sf and add grid ID\nhxgn_grid_sf = st_sf(hxgn_grid) %&gt;%\n  mutate(grid_id = 1:length(lengths(hxgn_grid)))\n\nMerging imported busstop data with Hexagonal grid as follows.\n\nbusstop_hxgn_grid &lt;- st_intersection(busstop, hxgn_grid_sf) %&gt;%\n  select(BUS_STOP_N, grid_id) %&gt;%\n  st_drop_geometry()\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\n\nChecking for BUS_STOP_N with duplicate grid_id, and grid_id with duplicate BUS_STOP_N.\n\ncheck_duplicate &lt;- busstop_hxgn_grid %&gt;%\n  group_by(grid_id) %&gt;%\n  summarise(num_BUS_STOP_N = n_distinct(BUS_STOP_N))\n\ncheck_duplicate1 &lt;- busstop_hxgn_grid %&gt;%\n  group_by(BUS_STOP_N) %&gt;%\n  summarise(num_grid_id = n_distinct(grid_id))\n\nFrom the above, - out of 3,131 grid_id, 1,476 (47%) grid_id contain 2 busstops, 1,410 (45%) grid_id contain only 1 busstop, and the remaining 8% containing more than 2 busstops. Only 1 grid_id has the maximum of 5 busstops. - out of 5,145 busstops, only 8 intercept across 2 grid_id.\nHence, for this exercise, to avoid double counting of trips subsequently, the duplicate grid_id for the 8 busstops are removed.\n\nbusstop_hxgn_grid &lt;- distinct(busstop_hxgn_grid, BUS_STOP_N, .keep_all = TRUE)\n\n\n\nMerging Peakhour Passenger Trips with Geospatial data\n\nWeekday morning peak\nAppend the merged busstop_hxgn_grid frame onto odbus_wkd6_9 data frame as follows.\n\nwkd6_9_hxgn_grid &lt;- left_join(busstop_hxgn_grid, odbus_wkd6_9,\n            by = c(\"BUS_STOP_N\" = \"ORIGIN_PT_CODE\")) %&gt;%\n  rename(ORIGIN_BS = BUS_STOP_N,\n         ORIGIN_GRID = grid_id) %&gt;%\n  group_by(ORIGIN_GRID) %&gt;%\n  reframe(\n    MAX_TRIPS_BS = ORIGIN_BS[which.max(sum(TRIPS))],\n    TOT_TRIPS = sum(TRIPS),\n    AVG_TRIPS = mean(TRIPS)\n  ) \n\nAs a good practice, check for duplicate records and retain duplicate records as follows.\n\nduplicate &lt;- wkd6_9_hxgn_grid %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nwkd6_9_hxgn_grid &lt;- unique(wkd6_9_hxgn_grid)\n\nMerge resultant data with hexgon grid and filter as follows\n\nwkd6_9_hxgn_grid_sf &lt;- left_join(hxgn_grid_sf, \n                           wkd6_9_hxgn_grid,\n                           by = c(\"grid_id\" = \"ORIGIN_GRID\"))%&gt;%\n  select(MAX_TRIPS_BS, TOT_TRIPS, AVG_TRIPS, hxgn_grid)\n\nwkd6_9_hxgn_grid_sf = filter(wkd6_9_hxgn_grid_sf, TOT_TRIPS &gt; 0)\n\n\n\nWeekday evening peak\nAppend the merged busstop_hxgn_grid frame onto odbus_wkd17_20 data frame as follows.\n\nwkd17_20_hxgn_grid &lt;- left_join(busstop_hxgn_grid, odbus_wkd17_20,\n            by = c(\"BUS_STOP_N\" = \"ORIGIN_PT_CODE\")) %&gt;%\n  rename(ORIGIN_BS = BUS_STOP_N,\n         ORIGIN_GRID = grid_id) %&gt;%\n  group_by(ORIGIN_GRID) %&gt;%\n  reframe(\n    MAX_TRIPS_BS = ORIGIN_BS[which.max(sum(TRIPS))],\n    TOT_TRIPS = sum(TRIPS),\n    AVG_TRIPS = mean(TRIPS)\n  )\n\nAs a good practice, check for duplicate records and retain duplicate records as follows.\n\nduplicate1 &lt;- wkd17_20_hxgn_grid %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nwkd17_20_hxgn_grid &lt;- unique(wkd17_20_hxgn_grid)\n\nMerge resultant data with hexgon grid and filter as follows\n\nwkd17_20_hxgn_grid_sf &lt;- left_join(hxgn_grid_sf, \n                           wkd17_20_hxgn_grid,\n                           by = c(\"grid_id\" = \"ORIGIN_GRID\"))%&gt;%\n  select(MAX_TRIPS_BS, TOT_TRIPS, AVG_TRIPS, hxgn_grid)\n\nwkd17_20_hxgn_grid_sf = filter(wkd17_20_hxgn_grid_sf, TOT_TRIPS &gt; 0)\n\n\n\nWeekend/holiday morning peak\nAppend the merged busstop_hxgn_grid frame onto odbus_wke11_14 data frame as follows.\n\nwke11_14_hxgn_grid &lt;- left_join(busstop_hxgn_grid, odbus_wke11_14,\n            by = c(\"BUS_STOP_N\" = \"ORIGIN_PT_CODE\")) %&gt;%\n  rename(ORIGIN_BS = BUS_STOP_N,\n         ORIGIN_GRID = grid_id) %&gt;%\n  group_by(ORIGIN_GRID) %&gt;%\n  reframe(\n    MAX_TRIPS_BS = ORIGIN_BS[which.max(sum(TRIPS))],\n    TOT_TRIPS = sum(TRIPS),\n    AVG_TRIPS = mean(TRIPS)\n  )\n\nAs a good practice, check for duplicate records and retain duplicate records as follows.\n\nduplicate2 &lt;- wke11_14_hxgn_grid %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nwke11_14_hxgn_grid &lt;- unique(wke11_14_hxgn_grid)\n\nMerge resultant data with hexgon grid and filter as follows\n\nwke11_14_hxgn_grid_sf &lt;- left_join(hxgn_grid_sf, \n                           wke11_14_hxgn_grid,\n                           by = c(\"grid_id\" = \"ORIGIN_GRID\"))%&gt;%\n  select(MAX_TRIPS_BS, TOT_TRIPS, AVG_TRIPS, hxgn_grid)\n\nwke11_14_hxgn_grid_sf = filter(wke11_14_hxgn_grid_sf, TOT_TRIPS &gt; 0)\n\n\n\nWeekend/holiday evening peak\nAppend the merged busstop_hxgn_grid frame onto odbus_wke16_19 data frame as follows.\n\nwke16_19_hxgn_grid &lt;- left_join(busstop_hxgn_grid, odbus_wke16_19,\n            by = c(\"BUS_STOP_N\" = \"ORIGIN_PT_CODE\")) %&gt;%\n  rename(ORIGIN_BS = BUS_STOP_N,\n         ORIGIN_GRID = grid_id) %&gt;%\n  group_by(ORIGIN_GRID) %&gt;%\n  reframe(\n    MAX_TRIPS_BS = ORIGIN_BS[which.max(sum(TRIPS))],\n    TOT_TRIPS = sum(TRIPS),\n    AVG_TRIPS = mean(TRIPS)\n  )\n\nAs a good practice, check for duplicate records and retain duplicate records as follows.\n\nduplicate3 &lt;- wke16_19_hxgn_grid %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nwke16_19_hxgn_grid &lt;- unique(wke16_19_hxgn_grid)\n\nMerge resultant data with hexgon grid and filter as follows\n\nwke16_19_hxgn_grid_sf &lt;- left_join(hxgn_grid_sf, \n                           wke16_19_hxgn_grid,\n                           by = c(\"grid_id\" = \"ORIGIN_GRID\"))%&gt;%\n  select(MAX_TRIPS_BS, TOT_TRIPS, AVG_TRIPS, hxgn_grid)\n\nwke16_19_hxgn_grid_sf = filter(wke16_19_hxgn_grid_sf, TOT_TRIPS &gt; 0)\n\n\n\n\nGeovisualisation of Busstop Peakhour periods\nPlot the map with hexagonal grid as follows for:\n\nWeekday morning peak\n\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\ntm_shape(wkd6_9_hxgn_grid_sf) +\n  tm_fill(\n    col = c(\"TOT_TRIPS\", \"AVG_TRIPS\"),\n    palette = \"Reds\",\n    style = \"quantile\",\n    title = c(\"Total Passenger Trips during Weekday Morning Peak\", \"Average Passenger Trips during Weekday Morning Peak\"),\n    id = \"grid_id\",\n    showNA = FALSE,\n    alpha = 0.6,\n    popup.vars = c(\n      \"Total Trips: \" = \"TOT_TRIPS\",\n      \"Average Trips: \" = \"AVG_TRIPS\",\n      \"Most Popular Bus Stop: \" = \"MAX_TRIPS_BS\"\n      \n    ),\n    popup.format = list(\n      TOT_TRIPS = list(format = \"f\", digits = 0),\n      AVG_TRIPS = list(format = \"f\", digits = 0),\n      MAX_TRIPS_BS = list(format = \"f\", digits = 0)\n    )\n  ) +\n  tm_layout(main.title = \"Bus Stop Passenger Trips during Weekday Morning Peak\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeekday evening peak\n\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\ntm_shape(wkd17_20_hxgn_grid_sf) +\n  tm_fill(\n    col = c(\"TOT_TRIPS\", \"AVG_TRIPS\"),\n    palette = \"Reds\",\n    style = \"quantile\",\n    title = c(\"Total Passenger Trips during Weekday Evening Peak\", \"Average Passenger Trips during Weekday Evening Peak\"),\n    id = \"grid_id\",\n    showNA = FALSE,\n    alpha = 0.6,\n    popup.vars = c(\n      \"Total Trips: \" = \"TOT_TRIPS\",\n      \"Average Trips: \" = \"AVG_TRIPS\",\n      \"Most Popular Bus Stop: \" = \"MAX_TRIPS_BS\"\n      \n    ),\n    popup.format = list(\n      TOT_TRIPS = list(format = \"f\", digits = 0),\n      AVG_TRIPS = list(format = \"f\", digits = 0),\n      MAX_TRIPS_BS = list(format = \"f\", digits = 0)\n    )\n  ) +\n  tm_layout(main.title = \"Bus Stop Passenger Trips during Weekday Evening Peak\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeekend/holiday morning peak\n\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\ntm_shape(wke11_14_hxgn_grid_sf) +\n  tm_fill(\n    col = c(\"TOT_TRIPS\", \"AVG_TRIPS\"),\n    palette = \"Reds\",\n    style = \"quantile\",\n    title = c(\"Total Passenger Trips during Weekend Morning Peak\", \"Average Passenger Trips during Weekend Morning Peak\"),\n    id = \"grid_id\",\n    showNA = FALSE,\n    alpha = 0.6,\n    popup.vars = c(\n      \"Total Trips: \" = \"TOT_TRIPS\",\n      \"Average Trips: \" = \"AVG_TRIPS\",\n      \"Most Popular Bus Stop: \" = \"MAX_TRIPS_BS\"\n      \n    ),\n    popup.format = list(\n      TOT_TRIPS = list(format = \"f\", digits = 0),\n      AVG_TRIPS = list(format = \"f\", digits = 0),\n      MAX_TRIPS_BS = list(format = \"f\", digits = 0)\n    )\n  ) +\n  tm_layout(main.title = \"Bus Stop Passenger Trips during Weekend Morning Peak\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeekend/holiday evening peak\n\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\ntm_shape(wke16_19_hxgn_grid_sf) +\n  tm_fill(\n    col = c(\"TOT_TRIPS\", \"AVG_TRIPS\"),\n    palette = \"Reds\",\n    style = \"quantile\",\n    title = c(\"Total Passenger Trips during Weekend Evening Peak\", \"Average Passenger Trips during Weekend Evening Peak\"),\n    id = \"grid_id\",\n    showNA = FALSE,\n    alpha = 0.6,\n    popup.vars = c(\n      \"Total Trips: \" = \"TOT_TRIPS\",\n      \"Average Trips: \" = \"AVG_TRIPS\",\n      \"Most Popular Bus Stop: \" = \"MAX_TRIPS_BS\"\n      \n    ),\n    popup.format = list(\n      TOT_TRIPS = list(format = \"f\", digits = 0),\n      AVG_TRIPS = list(format = \"f\", digits = 0),\n      MAX_TRIPS_BS = list(format = \"f\", digits = 0)\n    )\n  ) +\n  tm_layout(main.title = \"Bus Stop Passenger Trips during Weekend Evening Peak\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSpatial patterns revealed by the geovisualisation\nFrom the Geovisualisation of the 4 peak periods, it is noted that the number of trips during the evening is higher than morning for each day type. Further based on 9 weekend/holidays and 22 weekdays in October 2023, there is higher trips per day for weekdays as compared to weekdays.\nAmongst the bus stops, the highest number of trip origins across the 4 peak periods are from the bus interchanges; while by region, the northwestern and southwestern region of Singapore seems to have the least number of trip origins across the 4 peak periods.\nMaking a comparison between distribution by Total trips and Average trips reveals whether there isn’t a very noticeable difference, and hence the areas with higher passenger trip origins were largely attributed to popular bus stops within the hexagon, rather than the number of bus stops."
  },
  {
    "objectID": "Take-home_Exercises/Take-home_Ex1/Take-home_Ex1.html#objective-2-analysis-of-local-indicators-of-spatial-association-lisa",
    "href": "Take-home_Exercises/Take-home_Ex1/Take-home_Ex1.html#objective-2-analysis-of-local-indicators-of-spatial-association-lisa",
    "title": "Take-home_Ex1",
    "section": "Objective (2): Analysis of Local Indicators of Spatial Association (LISA)",
    "text": "Objective (2): Analysis of Local Indicators of Spatial Association (LISA)\n\nMerging Passenger Trips with Geospatial data\nAppend the merged busstop_hxgn_grid frame onto the complete odbus data frame as follows.\n\nodbus_hxgn_grid &lt;- left_join(busstop_hxgn_grid, odbus,\n            by = c(\"BUS_STOP_N\" = \"ORIGIN_PT_CODE\")) %&gt;%\n  rename(ORIGIN_BS = BUS_STOP_N,\n         ORIGIN_GRID = grid_id) %&gt;%\n  group_by(ORIGIN_GRID) %&gt;%\n  reframe(\n    MAX_TRIPS_BS = ORIGIN_BS[which.max(sum(TOTAL_TRIPS))],\n    TOT_TRIPS = sum(TOTAL_TRIPS),\n    AVG_TRIPS = mean(TOTAL_TRIPS)\n  ) \n\nAs a good practice, check for duplicate records and retain duplicate records as follows.\n\nduplicate4 &lt;- odbus_hxgn_grid %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nodbus_hxgn_grid &lt;- unique(odbus_hxgn_grid)\n\nMerge resultant data with hexgon grid and filter as follows\n\nodbus_hxgn_grid_sf &lt;- left_join(hxgn_grid_sf, \n                           odbus_hxgn_grid,\n                           by = c(\"grid_id\" = \"ORIGIN_GRID\"))%&gt;%\n  select(MAX_TRIPS_BS, TOT_TRIPS, AVG_TRIPS, hxgn_grid)\n\nodbus_hxgn_grid_sf = filter(odbus_hxgn_grid_sf, TOT_TRIPS &gt; 0)\n\n\n\nDeriving adaptive distance based-weights\nderive an adaptive spatial weights by using the code chunk below.\n\nwm_ad &lt;- odbus_hxgn_grid_sf %&gt;% \n  mutate(nb = st_knn(hxgn_grid,\n                     k=8),\n         wt = st_weights(nb),\n               .before = 1)\n\n! Polygon provided. Using point on surface.\n\n\n\n\nComputing local Moran’s I\nCompute Local Moran’s I of GDPPC at county level by using local_moran() of sfdep package as follows.\n\nlisa &lt;- wm_ad %&gt;% \n  mutate(local_moran = local_moran(\n    TOT_TRIPS, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)\n\n\n\nVisualising local Moran’s I and p-value\nFor effective comparison, the Moran I and p-value maps will be plotted next to each other as shown below.\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\nmap1 &lt;- tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"local Moran's I of Passenger Trips\",\n            main.title.size = 0.8)\n\nmap2 &lt;- tm_shape(lisa) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrom the above, it is noted that majority of the points had p-values that were more than 0.05, which meant that there were insufficient statistical evidence that the passenger trip origins were clusters or outliers relative it its closest 6 neighbours. However, there seems to be a noticeable cluster in the northwestern and southwestern region of Singapore, where the p-values are less than 0.05\nThe majority of points also had ii values that were close to 0, which meant that they low spatial correlation in passenger trip origins.\n\n\nVisualising LISA map\nThe LISA map is plotted with 2 types of outliers (High-Low and Low-High), and two type of clusters (namely: (High-High and Low-Low), which combines local Moran’s I of geographical areas and their respective p-values. For this plot, the classification in mean is used as shown below.\n\nlisa_sig &lt;- lisa  %&gt;%\n  filter(p_ii_sim &lt; 0.05)\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\ntm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\n\n\n\n\n\n\nAligned with the earlier analysis, noticeable/sizeable low-low clusters can be observed in the north western and southwestern region of Singapore. Notwithstanding, there are also other low-low and high-high clusters sparsely distributed across the other regions, as well as rarer occurences of high-high and low-low outliers across Singapore."
  }
]